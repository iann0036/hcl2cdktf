// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate a cloudfront distribution resource 1`] = `
"import { Construct } from 'constructs';
import { App, TerraformStack, TerraformOutput } from 'cdktf';
import { S3Bucket, CloudfrontDistribution, AwsProvider } from './.gen/providers/aws';

class MyStack extends TerraformStack {
    constructor(scope: Construct, name: string) {
        super(scope, name);

        const b = new S3Bucket(this, 'b', {
            acl: \\"private\\",
            bucket: \\"mybucket\\",
            tags: [
                [{
                    name: \\"My bucket\\"
                }]
            ]
        });

        const s3_distribution = new CloudfrontDistribution(this, 's3_distribution', {
            aliases: [
                \\"mysite.example.com\\",
                \\"yoursite.example.com\\"
            ],
            comment: \\"Some comment\\",
            defaultCacheBehavior: [
                [{
                    allowedMethods: [
                        \\"DELETE\\",
                        \\"GET\\",
                        \\"HEAD\\",
                        \\"OPTIONS\\",
                        \\"PATCH\\",
                        \\"POST\\",
                        \\"PUT\\"
                    ],
                    cachedMethods: [
                        \\"GET\\",
                        \\"HEAD\\"
                    ],
                    defaultTtl: 3600,
                    forwardedValues: [
                        [{
                            cookies: [
                                [{
                                    forward: \\"none\\"
                                }]
                            ],
                            queryString: false
                        }]
                    ],
                    maxTtl: 86400,
                    minTtl: 0,
                    targetOriginId: s3_origin_id,
                    viewerProtocolPolicy: \\"allow-all\\"
                }]
            ],
            defaultRootObject: \\"index.html\\",
            enabled: true,
            isIpv6Enabled: true,
            loggingConfig: [
                [{
                    bucket: \\"mylogs.s3.amazonaws.com\\",
                    includeCookies: false,
                    prefix: \\"myprefix\\"
                }]
            ],
            orderedCacheBehavior: [
                [{
                    allowedMethods: [
                        \\"GET\\",
                        \\"HEAD\\",
                        \\"OPTIONS\\"
                    ],
                    cachedMethods: [
                        \\"GET\\",
                        \\"HEAD\\",
                        \\"OPTIONS\\"
                    ],
                    compress: true,
                    defaultTtl: 86400,
                    forwardedValues: [
                        [{
                            cookies: [
                                [{
                                    forward: \\"none\\"
                                }]
                            ],
                            headers: [
                                \\"Origin\\"
                            ],
                            queryString: false
                        }]
                    ],
                    maxTtl: 31536000,
                    minTtl: 0,
                    pathPattern: \\"/content/immutable/*\\",
                    targetOriginId: s3_origin_id,
                    viewerProtocolPolicy: \\"redirect-to-https\\"
                }],
                [{
                    allowedMethods: [
                        \\"GET\\",
                        \\"HEAD\\",
                        \\"OPTIONS\\"
                    ],
                    cachedMethods: [
                        \\"GET\\",
                        \\"HEAD\\"
                    ],
                    compress: true,
                    defaultTtl: 3600,
                    forwardedValues: [
                        [{
                            cookies: [
                                [{
                                    forward: \\"none\\"
                                }]
                            ],
                            queryString: false
                        }]
                    ],
                    maxTtl: 86400,
                    minTtl: 0,
                    pathPattern: \\"/content/*\\",
                    targetOriginId: s3_origin_id,
                    viewerProtocolPolicy: \\"redirect-to-https\\"
                }]
            ],
            origin: [
                [{
                    domainName: b.bucket_regional_domain_name,
                    originId: s3_origin_id,
                    s3OriginConfig: [
                        [{
                            originAccessIdentity: \\"origin-access-identity/cloudfront/ABCDEFG1234567\\"
                        }]
                    ]
                }]
            ],
            priceClass: \\"PriceClass_200\\",
            restrictions: [
                [{
                    geoRestriction: [
                        [{
                            locations: [
                                \\"US\\",
                                \\"CA\\",
                                \\"GB\\",
                                \\"DE\\"
                            ],
                            restrictionType: \\"whitelist\\"
                        }]
                    ]
                }]
            ],
            tags: [
                [{
                    environment: \\"production\\"
                }]
            ],
            viewerCertificate: [
                [{
                    cloudfrontDefaultCertificate: true
                }]
            ]
        });

        new TerraformOutput(this, 'b', {
            value: b
        });

        new TerraformOutput(this, 's3_distribution', {
            value: s3_distribution
        });

    }
}

const app = new App();
new MyStack(app, 'my-stack');
app.synth();
"
`;
